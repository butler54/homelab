
letsencrypt:
  region: ''
  server: https://acme-v02.api.letsencrypt.org/directory
  # staging URL
  # server: https://acme-staging-v02.api.letsencrypt.org/directory
  email: chris@thebutlers.me

clusterGroup:
  name: hub
  isHubCluster: true

  namespaces:
  - open-cluster-management
  - vault
  - golang-external-secrets
  - homeassistant
  - letsencrypt
  - cert-manager-operator
  - cert-manager
  - hello-world
  - openshift-cnv
  - openshift-logging
  - openshift-nmstate

  subscriptions:
    cnv:
      name: kubevirt-hyperconverged
      namespace: openshift-cnv
      channel: stable

    openshift-logging:
      name: cluster-logging
      namespace: openshift-logging
      channel: stable

    openshift-nmstate:
      name: kubernetes-nmstate-operator
      namespace: openshift-nmstate
      channel: stable

    cert-manager:
      name: openshift-cert-manager-operator
      namespace: cert-manager-operator
      channel: stable-v1

  #csv: advanced-cluster-management.v2.6.1
  # certmanager:
  #   name: cert-manager
  #   namespace: cert-manager
  #   channel: stable

  projects:
  - hub
  - config-demo
  - hello-world
  - cnv
  - network
  applications:
    # acm:
    #   name: acm
    #   namespace: open-cluster-management
    #   project: hub
    #   path: common/acm
    #   ignoreDifferences:
    #   - group: internal.open-cluster-management.io
    #     kind: ManagedClusterInfo
    #     jsonPointers:
    #     - /spec/loggingCA
    vault:
      name: vault
      namespace: vault
      project: hub
      path: common/hashicorp-vault

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: hub
      path: common/golang-external-secrets

    cnv:
      name: cnv
      namespace: openshift-cnv
      project: cnv
      path: charts/all/cnv
    network:
      name: network
      namespace: openshift-nmstate
      project: network
      path: charts/all/network
    # octoprint:
    #   name: octoprint
    #   namespace: octoprint
    #   project: octoprint
    #   path: charts/all/octoprint

    hello-world:
      name: hello-world
      namespace: hello-world
      project: hello-world
      path: charts/all/hello-world

    # letsencrypt:
    #   name: letsencrypt
    #   namespace: letsencrypt
    #   project: default
    #   path: charts/all/letsencrypt
  imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    jobs:
    - name: hello-world
      # ansible playbook to be run
      playbook: common/ansible/playbooks/hello-world/hello-world.yaml
      # per playbook timeout in seconds
      timeout: 234
      # verbosity: "-v"

  managedClusterGroups: {}
